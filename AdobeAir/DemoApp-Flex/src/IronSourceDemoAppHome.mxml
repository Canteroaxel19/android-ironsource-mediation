<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        actionBarVisible="false" creationComplete="start()" activate="onResume()" deactivate="onPause()">

    <fx:Declarations>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
        import com.ironsource.adobeair.IronSource;
        import com.ironsource.adobeair.IronSourceBannerSize;

        [Bindable]
        [Embed(source="assets/logo.png")]
        private var flexImage:Class;

        private var userId:String;
        private var appKey:String;

        private function start():void {
            versionNumber.text = "SDK Version " + IronSource.instance.getPluginVersion();

            userId = "demoUserAdobe";
            appKey = "515de885";


            // Register for apple attribution and request ATT
            IronSource.instance.registerAppForAdNetworkAttribution();
            IronSource.instance.requestTrackingAuthorizationWithCompletionHandler();
            var userStatus:int = IronSource.instance.trackingAuthorizationStatus();
            trace("trackingAuthorizationStatus is "+userStatus.toString());

            //The integrationHelper is used to validate the integration. Remove the integrationHelper before going live!
            IronSource.instance.validateIntegration();

            IronSource.instance.addEventListener("onRewardedVideoAdOpened", onRewardedVideoAdOpened);
            IronSource.instance.addEventListener("onRewardedVideoAdClosed", onRewardedVideoAdClosed);
            IronSource.instance.addEventListener("onRewardedVideoAvailabilityChanged", onRewardedVideoAvailabilityChanged);
            IronSource.instance.addEventListener("onRewardedVideoAdStarted", onRewardedVideoAdStarted);
            IronSource.instance.addEventListener("onRewardedVideoAdEnded", onRewardedVideoAdEnded);
            IronSource.instance.addEventListener("onRewardedVideoAdRewarded", onRewardedVideoAdRewarded);
            IronSource.instance.addEventListener("onRewardedVideoAdShowFailed", onRewardedVideoAdShowFailed);
            IronSource.instance.addEventListener("onRewardedVideoAdClicked", onRewardedVideoAdClicked);

            IronSource.instance.addEventListener("onInterstitialAdReady", onInterstitialAdReady);
            IronSource.instance.addEventListener("onInterstitialAdLoadFailed", onInterstitialAdLoadFailed);
            IronSource.instance.addEventListener("onInterstitialAdOpened", onInterstitialAdOpened);
            IronSource.instance.addEventListener("onInterstitialAdClosed", onInterstitialAdClosed);
            IronSource.instance.addEventListener("onInterstitialAdShowSucceeded", onInterstitialAdShowSucceeded);
            IronSource.instance.addEventListener("onInterstitialAdShowFailed", onInterstitialAdShowFailed);
            IronSource.instance.addEventListener("onInterstitialAdClicked", onInterstitialAdClicked);

            IronSource.instance.addEventListener("onInterstitialAdRewarded", onInterstitialAdRewarded);

            IronSource.instance.addEventListener("onOfferwallAvailable", onOfferwallAvailable);
            IronSource.instance.addEventListener("onOfferwallOpened", onOfferwallOpened);
            IronSource.instance.addEventListener("onOfferwallShowFailed", onOfferwallShowFailed);
            IronSource.instance.addEventListener("onOfferwallAdCredited", onOfferwallAdCredited);
            IronSource.instance.addEventListener("onGetOfferwallCreditsFailed", onGetOfferwallCreditsFailed);
            IronSource.instance.addEventListener("onOfferwallClosed", onOfferwallClosed);

            IronSource.instance.addEventListener("onBannerAdLoaded", onBannerAdLoaded);
            IronSource.instance.addEventListener("onBannerAdLoadFailed", onBannerAdLoadFailed);
            IronSource.instance.addEventListener("onBannerAdClicked", onBannerAdClicked);
            IronSource.instance.addEventListener("onBannerAdScreenPresented", onBannerAdScreenPresented);
            IronSource.instance.addEventListener("onBannerAdScreenDismissed", onBannerAdScreenDismissed);
            IronSource.instance.addEventListener("onBannerAdLeftApplication", onBannerAdLeftApplication);

            IronSource.instance.addEventListener("onSegmentReceived", onSegmentReceived);

            IronSource.instance.setAdaptersDebug(true);
            IronSource.instance.setConsent(true);

            IronSource.instance.setUserId(userId);
            IronSource.instance.init(appKey);
            //IronSource.instance.init(appKey, [IronSource.REWARDED_VIDEO, IronSource.INTERSTITIAL, IronSource.OFFERWALL, IronSource.BANNER]);


        }

        private function showRewardedVideo():void {
            if (btnRewardedVideo.label == "Show Rewarded Video") {
                if (IronSource.instance.isRewardedVideoAvailable())
                    IronSource.instance.showRewardedVideo();
                else
                    trace("Rewarded Video is not available");
            }
        }

        private function showOfferwall():void {
            if (btnOfferwall.label == "Show Offerwall") {
                if (IronSource.instance.isOfferwallAvailable())
                    IronSource.instance.showOfferwall();
                else
                    trace("Offerwall is not available");
            }
        }

        private function loadInterstitial():void {
            IronSource.instance.loadInterstitial();
        }

        private function showInterstitial():void {
            if (IronSource.instance.isInterstitialReady()) {
                IronSource.instance.showInterstitial();
                btnShowInterstitial.enabled = false;
            }
            else {
                trace("Interstitial is not available");
            }
        }

        private function loadBanner():void {
            IronSource.instance.loadBanner(IronSourceBannerSize.BANNER, IronSource.POSITION_BOTTOM);
        }

        private function onResume():void {
            IronSource.instance.onResume();
        }

        private function onPause():void {
            IronSource.instance.onPause();
        }

        //************************** RewardedVideo Callbacks **************************
        private function onRewardedVideoAdOpened(event:DataEvent):void {
            trace("onRewardedVideoAdOpened");
        }

        private function onRewardedVideoAdClosed(event:DataEvent):void {
            trace("onRewardedVideoAdClosed");
        }

        private function onRewardedVideoAvailabilityChanged(event:DataEvent):void {
            trace("onRewardedVideoAvailabilityChanged: " + event.data);

            if (event.data == "true") {
                btnRewardedVideo.label = "Show Rewarded Video";
                btnRewardedVideo.enabled = true;
            } else {
                btnRewardedVideo.label = "Show Rewarded Video";
                btnRewardedVideo.enabled = false;
            }
        }

        private function onRewardedVideoAdStarted(event:DataEvent):void {
            trace("onRewardedVideoAdStarted");
        }

        private function onRewardedVideoAdEnded(event:DataEvent):void {
            trace("onRewardedVideoAdEnded");
        }

        private function onRewardedVideoAdRewarded(event:DataEvent):void {
            var placementId:String;
            var placementName:String;
            var rewardName:String;
            var rewardAmount:int;

            if (event.data) {
                var placement:Object = JSON.parse(event.data);
                placementId = placement.placement_id;
                placementName = placement.placement_name;
                rewardName = placement.placement_reward_name;
                rewardAmount = parseInt(placement.placement_reward_amount);
            }

            trace("onRewardedVideoAdRewarded. Placement Id: " + placementId + " ; Placement name: " + placementName + " ; Reward name: " + rewardName + " ; Reward amount: " + rewardAmount);
        }

        private function onRewardedVideoAdShowFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("onRewardedVideoAdShowFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function onRewardedVideoAdClicked(event:DataEvent):void {
            trace("onRewardedVideoAdClicked");
        }

        //************************** Interstitial Callbacks **************************
        private function onInterstitialAdReady(event:DataEvent):void {
            trace("onInterstitialAdReady");

            btnShowInterstitial.enabled = true;
        }

        private function onInterstitialAdLoadFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("onInterstitialAdLoadFailed. Error code: " + errorCode + " ; Description: " + errorDescription);

            btnShowInterstitial.enabled = false;
        }

        private function onInterstitialAdOpened(event:DataEvent):void {
            trace("onInterstitialAdOpened");
        }

        private function onInterstitialAdClosed(event:DataEvent):void {
            trace("onInterstitialAdClosed");
        }

        private function onInterstitialAdShowSucceeded(event:DataEvent):void {
            trace("onInterstitialAdShowSucceeded");
        }

        private function onInterstitialAdShowFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("onInterstitialAdShowFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function onInterstitialAdClicked(event:DataEvent):void {
            trace("onInterstitialAdClicked");
        }

        private function onInterstitialAdRewarded(event:DataEvent):void {
            trace("onInterstitialAdRewarded");
        }

        //************************** Offerwall Callbacks **************************
        private function onOfferwallAvailable(event:DataEvent):void {
            trace("onOfferwallAvailable: " + event.data);

            if (event.data == "true") {
                btnOfferwall.label = "Show Offerwall";
                btnOfferwall.enabled = true;
            } else {
                btnOfferwall.label = "Show Offerwall";
                btnOfferwall.enabled = false;
            }
        }

        private function onOfferwallOpened(event:DataEvent):void {
            trace("onOfferwallOpened");
        }

        private function onOfferwallShowFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("onOfferwallShowFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function onOfferwallAdCredited(event:DataEvent):void {
            var credits:int;
            var totalCredits:int;
            var totalCreditsFlag:String;

            if (event.data) {
                var creditsData:Object = JSON.parse(event.data);
                credits = parseInt(creditsData.credits);
                totalCredits = parseInt(creditsData.totalCredits);
                totalCreditsFlag = creditsData.totalCreditsFlag;
            }

            trace("onOfferwallAdCredited. Credits: " + credits + " ; Total credits: " + totalCredits + " ; Total credits flag: " + totalCreditsFlag);
        }

        private function onGetOfferwallCreditsFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("onGetOfferwallCreditsFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function onOfferwallClosed(event:DataEvent):void {
            trace("onOfferwallClosed");
        }

        //************************** Banner Callbacks **************************

        private function onBannerAdLoaded(event:DataEvent):void {
            trace("onBannerAdLoaded");
        }

        private function onBannerAdLoadFailed(event:DataEvent):void {
            trace("onBannerAdLoadFailed: " + event.data);
        }

        private function onBannerAdClicked(event:DataEvent):void {
            trace("onBannerAdClicked");
        }

        private function onBannerAdScreenPresented(event:DataEvent):void {
            trace("onBannerAdScreenPresented");
        }

        private function onBannerAdScreenDismissed(event:DataEvent):void {
            trace("onBannerAdScreenDismissed");
        }

        private function onBannerAdLeftApplication(event:DataEvent):void {
            trace("onBannerAdLeftApplication");
        }

        //************************** Segment Callbacks **************************
        private function onSegmentReceived(event:DataEvent):void {
            trace("onSegmentReceived: " + event.data);
        }
        ]]>
    </fx:Script>

    <fx:Style>
        .buttonStyle {
            fontSize: 27;
        }

        .lableStyle {
            fontSize: 25;
        }
    </fx:Style>

    <s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="center" paddingBottom="10"
              paddingLeft="10" paddingRight="10" paddingTop="10">
        <s:Image source="{flexImage}" width="100%"/>
        <s:Spacer height="50"/>
        <s:Button id="btnRewardedVideo" label="Initializing Rewarded Video" width="70%" height="70"
                  styleName="buttonStyle" click="showRewardedVideo()" enabled="false"/>
        <s:Button id="btnOfferwall" label="Initializing Offerwall" width="70%" height="70" styleName="buttonStyle"
                  click="showOfferwall()" enabled="false"/>
        <s:Button id="btnLoadInterstitial" label="Load Interstitial" width="70%" height="70" styleName="buttonStyle"
                  click="loadInterstitial()"/>
        <s:Button id="btnShowInterstitial" label="Show Interstitial" width="70%" height="70" styleName="buttonStyle"
                  click="showInterstitial()" enabled="false"/>
        <s:Button id="btnLoadBanner" label="Load Banner" width="70%" height="70" styleName="buttonStyle"
                  click="loadBanner()"/>
        <s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" paddingBottom="10"
                  paddingLeft="10" paddingRight="10" paddingTop="10">
            <s:Label id="versionNumber" styleName="lableStyle"/>
        </s:VGroup>
    </s:VGroup>
</s:View>
